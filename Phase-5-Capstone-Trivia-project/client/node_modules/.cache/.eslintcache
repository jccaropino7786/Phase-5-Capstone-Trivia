[{"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/index.js":"1","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/App.js":"2","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/reportWebVitals.js":"3","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/NavBar.js":"4","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Login.js":"5","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Signup.js":"6","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Welcome.js":"7","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/UserProfile.js":"8"},{"size":375,"mtime":1678324358780,"results":"9","hashOfConfig":"10"},{"size":1636,"mtime":1678318006444,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1678211491883,"results":"12","hashOfConfig":"10"},{"size":773,"mtime":1678332360182,"results":"13","hashOfConfig":"10"},{"size":1909,"mtime":1678313401637,"results":"14","hashOfConfig":"10"},{"size":3734,"mtime":1678324239911,"results":"15","hashOfConfig":"10"},{"size":400,"mtime":1678332053169,"results":"16","hashOfConfig":"10"},{"size":2572,"mtime":1678237835110,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6608vk",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/index.js",[],"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/App.js",["38","39"],"import './index.css';\nimport { Routes, Route} from 'react-router-dom'\nimport NavBar from \"./Components/NavBar\";\nimport LogIn from './Components/Login';\nimport Signup from './Components/Signup';\nimport Welcome from './Components/Welcome';\nimport UserProfile from './Components/UserProfile';\nimport { useState, useEffect } from 'react';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [login, setLogin] = useState(false)\n  const [errors, setErrors] = useState([])\n\n  useEffect(() => {\n    const fetchData = () =>\n    fetch('/auth')\n    .then(res => {\n      if(res.ok){\n        res.json().then(user => setCurrentUser(user))\n      } \n      // else {\n      //   const error = res.json().then(error = setError(error))\n      // }\n    })\n    if (!currentUser)\n    {fetchData() } \n  },[currentUser])\n  \n\n  if(!currentUser) {\n    return login ? <LogIn setLogin={setLogin} setCurrentUser={setCurrentUser} /> : <Signup setLogin={setLogin} setCurrentUser={setCurrentUser} /> \n  }\n  return (\n    <div>\n      <NavBar currentUser={currentUser} setCurrentUser={setCurrentUser} />\n      <div className=\"App\">\n        <Routes>  \n          <Route className=\"welcome\" path=\"/welcome\" element={ <Welcome/> } />\n          <Route className=\"profile\" path=\"/profile\" element={ <UserProfile currentUser={currentUser} setCurrentUser={setCurrentUser}/> } />\n          {/* <Route className=\"login\" path=\"/login\" element={ <LogIn setCurrentUser={setCurrentUser} /> }/>\n          <Route path=\"/signup\" element={ <Signup setCurrentUser={setCurrentUser} /> }/> */}\n        </Routes>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["40","41"],"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/reportWebVitals.js",[],"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/NavBar.js",[],"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Login.js",[],"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Signup.js",["42"],"import { useState, useEffect } from \"react\";\nimport {Form, Button, Label, Input} from \"semantic-ui-react\"\nimport { useNavigate } from \"react-router-dom\";\nimport jwt_decode from 'jwt-decode'\n\nfunction Signup({setCurrentUser, setLogin}){\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const oauth = (userObject) => {\n        fetch(\"/oauth\", {\n            method: \"POST\",\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(userObject)\n         })\n         .then(res => {\n            if(res.status === 201){\n                res.json().then(user => \n                  { setCurrentUser(user)\n                    navigate(\"/welcome\")\n                })\n            } \n            //   else{\n            //     res.json().then( errors => setErrors(errors))\n            // }\n        })\n    }\n\n    const handleCallbackResponse = response => {\n        console.log(\"Encoded JWT ID token: \" + response.credential);\n        var userObject = jwt_decode(response.credential);\n        console.log(userObject)\n        if(userObject !== {}) {\n          oauth(userObject, navigate)\n        }\n      }\n\n    useEffect(() => {\n        /* global google */\n        google.accounts.id.initialize({\n           client_id: \"405177722456-fpfcqtmigg7nng9dmvb16jnj6e13rse3.apps.googleusercontent.com\",\n           callback: handleCallbackResponse \n        })\n\n        google.accounts.id.renderButton(\n            document.getElementById(\"signInDiv\"),\n            { theme: \"outline\", size: \"large\"}\n        )\n    }, [])\n    \n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            email,\n            username,\n            password\n        }\n        fetch('/signup',{\n            method: \"POST\",\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(user)\n    })\n    .then(res => {\n        if(res.ok){\n            res.json().then(user => \n              { setCurrentUser(user)\n                navigate(\"/welcome\")\n            })\n        } \n        //   else{\n        //     res.json().then( errors => setErrors(errors))\n        // }\n    })\n    \n}\n\nreturn (\n    <div> \n        <div className=\"SignUp\">\n        <h2>Sign Up</h2>\n        <Form onSubmit={onSubmit}>\n            <Form.Group size=\"large\" id=\"email\">\n            <Label>Email</Label>\n            <Input\n                autoFocus\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            </Form.Group>\n            <Form.Group size=\"large\" id=\"username\">\n            <Label>Username</Label>\n            <Input\n                name=\"username\"\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            </Form.Group>\n            <Form.Group size=\"large\" id=\"password\">\n            <Label>Password</Label>\n            <Input\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            </Form.Group>\n            <Button size=\"large\" type=\"submit\" disabled={!validateForm()}>\n            Sign Up!!\n            </Button>\n            \n        </Form>\n        <Button onClick={()=>{setLogin(current => !current)}}> Already have an account? Login </Button>\n        <div id=\"signInDiv\"></div>\n        </div>\n    </div>\n\n  );\n\n}\n\nexport default Signup","/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Welcome.js",[],"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/UserProfile.js",["43"],"import { useState } from \"react\";\nimport {Form, Button, Label, Input} from \"semantic-ui-react\"\nimport { useNavigate } from \"react-router-dom\";\n\nfunction UserProfile({currentUser, setCurrentUser}){\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(currentUser.email)\n    const [username, setUsername] = useState(currentUser.username)\n    \n    \n\n    function validateForm() {\n        return email.length > 0 && username.length > 0;\n    }\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            email: email,\n            username: username\n        }\n        fetch(`/users/${currentUser.id}`, {\n            method: 'PATCH',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify( user )\n          })\n            .then(response => {\n                console.log(response)\n              \n              if (response.status === 200) {\n                response.json().then(data => {\n                  console.log(data)\n                  setCurrentUser(user)\n                })\n              } else {\n                response.json().then(error => alert(error.errors))\n              }\n            })\n            .catch(error => alert(error));\n\n\n    }\n\n    const handleDelete = () => {\n        // Simple DELETE request with fetch\n        fetch(`/users/${currentUser.id}`, { method: 'DELETE' })\n        .then(() => setCurrentUser(null))\n      }\n\n    return(\n        <div>\n            \n            <div className=\"SignUp\">\n                <h2>Edit Profile</h2>\n            <Form onSubmit={onSubmit}>\n            <Form.Group size=\"lg\" id=\"email\">\n            <Label>Email</Label>\n            <Input\n                autoFocus\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            </Form.Group>\n            <Form.Group size=\"lg\" id=\"username\">\n            <Label>Username</Label>\n            <Input\n                name=\"username\"\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            </Form.Group>\n            \n            <Button block size=\"lg\" type=\"submit\" disabled={!validateForm()}>\n            Save Changes\n            </Button>\n            <Button block size=\"lg\" onClick={handleDelete} >\n            Delete User Forever\n            </Button>\n            \n        </Form>\n        </div>\n        </div>\n    )\n}\n\nexport default UserProfile",{"ruleId":"44","severity":1,"message":"45","line":13,"column":10,"nodeType":"46","messageId":"47","endLine":13,"endColumn":16},{"ruleId":"44","severity":1,"message":"48","line":13,"column":18,"nodeType":"46","messageId":"47","endLine":13,"endColumn":27},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":52,"column":8,"nodeType":"55","endLine":52,"endColumn":10,"suggestions":"56"},{"ruleId":"44","severity":1,"message":"57","line":7,"column":11,"nodeType":"46","messageId":"47","endLine":7,"endColumn":19},"no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'setErrors' is assigned a value but never used.","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCallbackResponse'. Either include it or remove the dependency array.","ArrayExpression",["60"],"'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [handleCallbackResponse]",{"range":"63","text":"64"},[1656,1658],"[handleCallbackResponse]"]