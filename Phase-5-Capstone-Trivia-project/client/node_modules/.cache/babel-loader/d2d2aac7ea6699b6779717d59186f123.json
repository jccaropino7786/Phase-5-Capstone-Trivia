{"ast":null,"code":"var _jsxFileName = \"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { Form, Button, Label, Input } from \"semantic-ui-react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signup({\n  setCurrentUser,\n  setLogin\n}) {\n  _s();\n\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function handleCallbackResponse(response) {}\n\n  useEffect(() => {\n    /* global google*/\n    google.accounts.id.initialize({\n      client_id: \"405177722456-fpfcqtmigg7nng9dmvb16jnj6e13rse3.apps.googleusercontent.com\",\n      callback: handleCallbackResponse\n    });\n    google.accounts.id;\n  }, []);\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      email,\n      username,\n      password\n    };\n    fetch('/signup', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(res => {\n      if (res.ok) {\n        res.json().then(user => {\n          setCurrentUser(user);\n          navigate(\"/welcome\");\n        });\n      } //   else{\n      //     res.json().then( errors => setErrors(errors))\n      // }\n\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SignUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"large\",\n          id: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            autoFocus: true,\n            name: \"email\",\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"large\",\n          id: \"username\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"username\",\n            type: \"username\",\n            value: username,\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          size: \"large\",\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            type: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"large\",\n          type: \"submit\",\n          disabled: !validateForm(),\n          children: \"Sign Up!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setLogin(current => !current);\n        },\n        children: \" Already have an account? Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Signup, \"YWTVLPwrAFZFaHXijrIvzhryDgs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/Signup.js"],"names":["useState","useEffect","Form","Button","Label","Input","useNavigate","Signup","setCurrentUser","setLogin","navigate","email","setEmail","username","setUsername","password","setPassword","handleCallbackResponse","response","google","accounts","id","initialize","client_id","callback","validateForm","length","onSubmit","e","preventDefault","user","fetch","method","headers","body","JSON","stringify","then","res","ok","json","target","value","current"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport {Form, Button, Label, Input} from \"semantic-ui-react\"\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Signup({setCurrentUser, setLogin}){\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState(\"\")\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    function handleCallbackResponse(response){\n\n    }\n\n    useEffect(() => {\n        /* global google*/\n        google.accounts.id.initialize({\n           client_id: \"405177722456-fpfcqtmigg7nng9dmvb16jnj6e13rse3.apps.googleusercontent.com\",\n           callback: handleCallbackResponse \n        })\n\n        google.accounts.id\n    }, [])\n    \n\n    function validateForm() {\n        return email.length > 0 && password.length > 0;\n    }\n\n    function onSubmit(e){\n        e.preventDefault()\n        const user = {\n            email,\n            username,\n            password\n        }\n        fetch('/signup',{\n            method: \"POST\",\n            headers:{'Content-Type': 'application/json'},\n            body:JSON.stringify(user)\n    })\n    .then(res => {\n        if(res.ok){\n            res.json().then(user => \n              { setCurrentUser(user)\n                navigate(\"/welcome\")\n            })\n        } \n        //   else{\n        //     res.json().then( errors => setErrors(errors))\n        // }\n    })\n    \n}\n\nreturn (\n    <div> \n        <div className=\"SignUp\">\n        <h2>Sign Up</h2>\n        <Form onSubmit={onSubmit}>\n            <Form.Group size=\"large\" id=\"email\">\n            <Label>Email</Label>\n            <Input\n                autoFocus\n                name=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n            />\n            </Form.Group>\n            <Form.Group size=\"large\" id=\"username\">\n            <Label>Username</Label>\n            <Input\n                name=\"username\"\n                type=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            </Form.Group>\n            <Form.Group size=\"large\" controlId=\"password\">\n            <Label>Password</Label>\n            <Input\n                name=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            </Form.Group>\n            <Button size=\"large\" type=\"submit\" disabled={!validateForm()}>\n            Sign Up!!\n            </Button>\n            \n        </Form>\n        <Button onClick={()=>{setLogin(current => !current)}}> Already have an account? Login </Button>\n        </div>\n    </div>\n\n  );\n\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}