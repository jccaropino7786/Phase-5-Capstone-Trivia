{"ast":null,"code":"var _jsxFileName = \"/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/TriviaGame.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TriviaGame = () => {\n  _s();\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  const optionClicked = isCorrect => {\n    // Increment the score\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USA Quiz \\uD83C\\uDDFA\\uD83C\\uDDF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), showResults ?\n    /*#__PURE__*/\n\n    /* 4. Final Results */\n    _jsxDEV(\"div\", {\n      className: \"final-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Final Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [score, \" out of \", questions.length, \" correct - ( 20%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"Restart game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this) :\n    /*#__PURE__*/\n\n    /* 5. Question Card  */\n    _jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question: \", currentQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(option.isCorrect),\n            children: option.text\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(TriviaGame, \"T41DzXNL5iLXoze+eiFUml9SzVE=\");\n\n_c = TriviaGame;\nexport default TriviaGame;\n\nvar _c;\n\n$RefreshReg$(_c, \"TriviaGame\");","map":{"version":3,"sources":["/Users/johncaropino/Desktop/Capstone Phase 5/Phase-5-Capstone-Trivia/Phase-5-Capstone-Trivia-project/client/src/Components/TriviaGame.js"],"names":["React","useState","useEffect","TriviaGame","currentQuestion","setCurrentQuestion","score","setScore","optionClicked","isCorrect","questions","length","setShowResults","showResults","restartGame","text","options","map","option","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCJ,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AAEF,QAAMO,aAAa,GAAIC,SAAD,IAAe;AACjC;AACA,QAAIA,SAAJ,EAAe;AACbF,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD;;AAED,QAAIF,eAAe,GAAG,CAAlB,GAAsBM,SAAS,CAACC,MAApC,EAA4C;AAC1CN,MAAAA,kBAAkB,CAACD,eAAe,GAAG,CAAnB,CAAlB;AACD,KAFD,MAEO;AACLQ,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAXH;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA,4BAAYN,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,EAQGO,WAAW;AAAA;;AACV;AACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBACGP,KADH,cACkBI,SAAS,CAACC,MAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAQ,QAAA,OAAO,EAAE,MAAMG,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFU;AAAA;;AAWV;AACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAEE;AAAA,iCACaV,eAAe,GAAG,CAD/B,cAC0CM,SAAS,CAACC,MADpD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+BD,SAAS,CAACN,eAAD,CAAT,CAA2BW;AAA1D;AAAA;AAAA;AAAA;AAAA,cALF,eAQE;AAAA,kBACGL,SAAS,CAACN,eAAD,CAAT,CAA2BY,OAA3B,CAAmCC,GAAnC,CAAwCC,MAAD,IAAY;AAClD,8BACE;AAEE,YAAA,OAAO,EAAE,MAAMV,aAAa,CAACU,MAAM,CAACT,SAAR,CAF9B;AAAA,sBAIGS,MAAM,CAACH;AAJV,aACOG,MAAM,CAACC,EADd;AAAA;AAAA;AAAA;AAAA,kBADF;AAQD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CW,CA/Db;;GAAMhB,U;;KAAAA,U;AAgEN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TriviaGame = () => {\n \n    const [currentQuestion, setCurrentQuestion] = useState(0);\n    const [score, setScore] = useState(0);\n  \n  const optionClicked = (isCorrect) => {\n      // Increment the score\n      if (isCorrect) {\n        setScore(score + 1);\n      }\n  \n      if (currentQuestion + 1 < questions.length) {\n        setCurrentQuestion(currentQuestion + 1);\n      } else {\n        setShowResults(true);\n      }\n    };\n  \n  return (\n      <div className=\"App\">\n        {/* 1. Header  */}\n        <h1>USA Quiz ðŸ‡ºðŸ‡¸</h1>\n  \n        {/* 2. Current Score  */}\n        <h2>Score: {score}</h2>\n  \n        {/* 3. Show results or show the question game  */}\n        {showResults ? (\n          /* 4. Final Results */\n          <div className=\"final-results\">\n            <h1>Final Results</h1>\n            <h2>\n              {score} out of {questions.length} correct - (\n              20%)\n            </h2>\n            <button onClick={() => restartGame()}>Restart game</button>\n          </div>\n        ) : (\n          /* 5. Question Card  */\n          <div className=\"question-card\">\n            {/* Current Question  */}\n            <h2>\n              Question: {currentQuestion + 1} out of {questions.length}\n            </h2>\n            <h3 className=\"question-text\">{questions[currentQuestion].text}</h3>\n  \n            {/* List of possible answers  */}\n            <ul>\n              {questions[currentQuestion].options.map((option) => {\n                return (\n                  <li\n                    key={option.id}\n                    onClick={() => optionClicked(option.isCorrect)}\n                  >\n                    {option.text}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        )}\n      </div>\n    );\n            }\nexport default TriviaGame;"]},"metadata":{},"sourceType":"module"}